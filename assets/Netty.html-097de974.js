import{_ as e,W as a,X as t,Y as i}from"./framework-e28ace55.js";const s={},n=i('<h1 id="netty" tabindex="-1"><a class="header-anchor" href="#netty" aria-hidden="true">#</a> Netty</h1><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424164005406.png" alt="image-20230424164005406"></p><blockquote><p>Netty is <strong>an advanced framework for creating high-performance networking applications</strong>. three main points: ■ You don’t have to be a networking expert to build applications with Netty. ■ Using Netty is much easier than using the underlying Java APIs directly.</p><p>■ Netty promotes good design practices, such as keeping your application logic decoupled from the network layer.</p></blockquote><p>https://javadoop.com/post/netty-part-1</p><h2 id="netty-overview" tabindex="-1"><a class="header-anchor" href="#netty-overview" aria-hidden="true">#</a> Netty Overview</h2><h3 id="feature" tabindex="-1"><a class="header-anchor" href="#feature" aria-hidden="true">#</a> Feature</h3><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424164302554.png" alt="image-20230424164302554"></p><h3 id="application-scenarios" tabindex="-1"><a class="header-anchor" href="#application-scenarios" aria-hidden="true">#</a> Application Scenarios</h3><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424164700157.png" alt="image-20230424164700157"></p><h3 id="core-component" tabindex="-1"><a class="header-anchor" href="#core-component" aria-hidden="true">#</a> Core Component</h3><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424230926228.png" alt="image-20230424230926228"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424230319356.png" alt="image-20230424230319356"></p><h3 id="netty-线程模型" tabindex="-1"><a class="header-anchor" href="#netty-线程模型" aria-hidden="true">#</a> Netty 线程模型</h3><h4 id="单线程模式" tabindex="-1"><a class="header-anchor" href="#单线程模式" aria-hidden="true">#</a> 单线程模式</h4><blockquote><p><strong>一个线程单独处理客户端连接以及I/O读写操作</strong>，涉及到accept，read，decode，process，encode，send等事件</p><p>不适合应用于高负载，高并发，对性能要求较高的场景</p></blockquote><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424233014241.png" alt="image-20230424233014241"></p><h4 id="多线程模式" tabindex="-1"><a class="header-anchor" href="#多线程模式" aria-hidden="true">#</a> 多线程模式</h4><blockquote><p><strong>一个Acceptor线程只负责监听客户端连接</strong></p><p><strong>一个NIO线程池负责处理I/O读写</strong></p><p>满足于绝大部分应用场景，并发连接量不是特别大的时候</p></blockquote><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424233301158.png" alt="image-20230424233301158"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424233324473.png" alt="image-20230424233324473"></p><h4 id="主从多线程模式" tabindex="-1"><a class="header-anchor" href="#主从多线程模式" aria-hidden="true">#</a> 主从多线程模式</h4><blockquote><p><strong>有一个主线程池，从中挑选一个线程作为Acceptor线程用于绑定监听端口，接收客户端连接；其他的线程负责后续的接入认证等工作完成连接。</strong></p><p><strong>有一个子线程池，负责具体的I/O读写操作</strong></p><p>多线程模型无法满足需求时，考虑使用主从多线程模型</p></blockquote><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424234017679.png" alt="image-20230424234017679"></p><h2 id="a-quick-guide-to-java-on-netty" tabindex="-1"><a class="header-anchor" href="#a-quick-guide-to-java-on-netty" aria-hidden="true">#</a> A Quick Guide to Java on Netty</h2><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424234029813.png" alt="image-20230424234029813"></p><blockquote><p>Server</p></blockquote><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424231739388.png" alt="image-20230424231739388"></p><blockquote><p>Client</p></blockquote><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230424231801138.png" alt="image-20230424231801138"></p>',29),o=[n];function r(c,p){return a(),t("div",null,o)}const d=e(s,[["render",r],["__file","Netty.html.vue"]]);export{d as default};
