const e=JSON.parse('{"key":"v-49cd022b","path":"/backend/dev_framework/SpringBoot.html","title":"Spring Boot Deeply","lang":"en-US","frontmatter":{"description":"Hello Spring Boot 自动配置原理 SpringBoot默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先 虽然我们127个场景的所有自动配置启动的时候默认全部加载。xxxxAutoConfiguration 按照条件装配规则（@Conditional），最终会按需配置 依赖管理 ```java 依赖管理 org.spring...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/backend/dev_framework/SpringBoot.html"}],["meta",{"property":"og:site_name","content":"Eddie-Tech-Blog"}],["meta",{"property":"og:title","content":"Spring Boot Deeply"}],["meta",{"property":"og:description","content":"Hello Spring Boot 自动配置原理 SpringBoot默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先 虽然我们127个场景的所有自动配置启动的时候默认全部加载。xxxxAutoConfiguration 按照条件装配规则（@Conditional），最终会按需配置 依赖管理 ```java 依赖管理 org.spring..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Boot Deeply\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Hello Spring Boot","slug":"hello-spring-boot","link":"#hello-spring-boot","children":[]},{"level":2,"title":"自动配置原理","slug":"自动配置原理","link":"#自动配置原理","children":[{"level":3,"title":"依赖管理","slug":"依赖管理","link":"#依赖管理","children":[]},{"level":3,"title":"自动配置","slug":"自动配置","link":"#自动配置","children":[]},{"level":3,"title":"查看Spring Boot为我们自动配置的组件","slug":"查看spring-boot为我们自动配置的组件","link":"#查看spring-boot为我们自动配置的组件","children":[]},{"level":3,"title":"Spring自动配置原理","slug":"spring自动配置原理","link":"#spring自动配置原理","children":[]},{"level":3,"title":"按需加载（@Conditional条件装配）","slug":"按需加载-conditional条件装配","link":"#按需加载-conditional条件装配","children":[]},{"level":3,"title":"IOC容器功能","slug":"ioc容器功能","link":"#ioc容器功能","children":[]},{"level":3,"title":"使用CommandLineRunner","slug":"使用commandlinerunner","link":"#使用commandlinerunner","children":[]},{"level":3,"title":"修改默认配置","slug":"修改默认配置","link":"#修改默认配置","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":3,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]},{"level":3,"title":"使用容器","slug":"使用容器","link":"#使用容器","children":[]}]},{"level":2,"title":"Lombok","slug":"lombok","link":"#lombok","children":[{"level":3,"title":"简化domain开发","slug":"简化domain开发","link":"#简化domain开发","children":[]},{"level":3,"title":"@Slf4j日志","slug":"slf4j日志","link":"#slf4j日志","children":[]}]},{"level":2,"title":"Dev-Tools","slug":"dev-tools","link":"#dev-tools","children":[]},{"level":2,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[{"level":3,"title":".yaml格式文件","slug":"yaml格式文件","link":"#yaml格式文件","children":[]},{"level":3,"title":"properties文件","slug":"properties文件","link":"#properties文件","children":[]},{"level":3,"title":"多环境配置","slug":"多环境配置","link":"#多环境配置","children":[]}]},{"level":2,"title":"Web开发","slug":"web开发","link":"#web开发","children":[{"level":3,"title":"静态资源访问","slug":"静态资源访问","link":"#静态资源访问","children":[]},{"level":3,"title":"欢迎页面","slug":"欢迎页面","link":"#欢迎页面","children":[]},{"level":3,"title":"自定义 Favicon","slug":"自定义-favicon","link":"#自定义-favicon","children":[]},{"level":3,"title":"静态资源配置原理","slug":"静态资源配置原理","link":"#静态资源配置原理","children":[]},{"level":3,"title":"请求参数处理","slug":"请求参数处理","link":"#请求参数处理","children":[]},{"level":3,"title":"请求映射原理","slug":"请求映射原理","link":"#请求映射原理","children":[]},{"level":3,"title":"参数处理原理","slug":"参数处理原理","link":"#参数处理原理","children":[]}]},{"level":2,"title":"Web组件","slug":"web组件","link":"#web组件","children":[{"level":3,"title":"拦截器Interceptor","slug":"拦截器interceptor","link":"#拦截器interceptor","children":[]},{"level":3,"title":"Servlet","slug":"servlet","link":"#servlet","children":[]},{"level":3,"title":"Filter","slug":"filter","link":"#filter","children":[]}]},{"level":2,"title":"&Mybatis","slug":"mybatis","link":"#mybatis","children":[{"level":3,"title":"@Mapper&@MapperScan","slug":"mapper-mapperscan","link":"#mapper-mapperscan","children":[]},{"level":3,"title":"&Spring事务","slug":"spring事务","link":"#spring事务","children":[]}]},{"level":2,"title":"REST风格","slug":"rest风格","link":"#rest风格","children":[{"level":3,"title":"使用PUT&DELETE请求","slug":"使用put-delete请求","link":"#使用put-delete请求","children":[]}]},{"level":2,"title":"&Redis","slug":"redis","link":"#redis","children":[{"level":3,"title":"Template对象","slug":"template对象","link":"#template对象","children":[]},{"level":3,"title":"Redis序列化","slug":"redis序列化","link":"#redis序列化","children":[]},{"level":3,"title":"设置RedisTemplate序列化","slug":"设置redistemplate序列化","link":"#设置redistemplate序列化","children":[]},{"level":3,"title":"JackSon（JSON序列化）","slug":"jackson-json序列化","link":"#jackson-json序列化","children":[]}]},{"level":2,"title":"Spring Cache","slug":"spring-cache","link":"#spring-cache","children":[{"level":3,"title":"Spring 框架自带的CacheManager(内存层面的缓存)","slug":"spring-框架自带的cachemanager-内存层面的缓存","link":"#spring-框架自带的cachemanager-内存层面的缓存","children":[]},{"level":3,"title":"Spring Cache 整合Redis 进行缓存","slug":"spring-cache-整合redis-进行缓存","link":"#spring-cache-整合redis-进行缓存","children":[]},{"level":3,"title":"自定义Spring Cache配置","slug":"自定义spring-cache配置","link":"#自定义spring-cache配置","children":[]},{"level":3,"title":"常用注解","slug":"常用注解","link":"#常用注解","children":[]},{"level":3,"title":"SpringCache总结","slug":"springcache总结","link":"#springcache总结","children":[]}]},{"level":2,"title":"JSR303规范(注解方式)进行数据校验","slug":"jsr303规范-注解方式-进行数据校验","link":"#jsr303规范-注解方式-进行数据校验","children":[]},{"level":2,"title":"&Dubbo","slug":"dubbo","link":"#dubbo","children":[{"level":3,"title":"Spring Boot 整合 Dubbo & Zookeeper","slug":"spring-boot-整合-dubbo-zookeeper","link":"#spring-boot-整合-dubbo-zookeeper","children":[]}]},{"level":2,"title":".war&.jar","slug":"war-jar","link":"#war-jar","children":[{"level":3,"title":".jar：打包Java文件","slug":"jar-打包java文件","link":"#jar-打包java文件","children":[]},{"level":3,"title":".war：打包web项目","slug":"war-打包web项目","link":"#war-打包web项目","children":[]}]},{"level":2,"title":"SpringBoot项目运行方式","slug":"springboot项目运行方式","link":"#springboot项目运行方式","children":[{"level":3,"title":"在IDEA中直接运行SpringBoot程序的main方法（开发阶段）","slug":"在idea中直接运行springboot程序的main方法-开发阶段","link":"#在idea中直接运行springboot程序的main方法-开发阶段","children":[]},{"level":3,"title":"用Maven将SpringBoot项目打包为jar包，使用Java命令（cmd）运行（上线部署阶段）","slug":"用maven将springboot项目打包为jar包-使用java命令-cmd-运行-上线部署阶段","link":"#用maven将springboot项目打包为jar包-使用java命令-cmd-运行-上线部署阶段","children":[]}]},{"level":2,"title":"Thymeleaf","slug":"thymeleaf","link":"#thymeleaf","children":[{"level":3,"title":"SpringBoot集成了Thymeleaf","slug":"springboot集成了thymeleaf","link":"#springboot集成了thymeleaf","children":[]}]},{"level":2,"title":"Spring Security with JWT","slug":"spring-security-with-jwt","link":"#spring-security-with-jwt","children":[]},{"level":2,"title":"Spring Boot 注解","slug":"spring-boot-注解","link":"#spring-boot-注解","children":[]}],"git":{},"readingTime":{"minutes":30.46,"words":9138},"filePathRelative":"backend/dev_framework/SpringBoot.md","autoDesc":true}');export{e as data};
