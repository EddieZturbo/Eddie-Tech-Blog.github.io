import{_ as n,W as s,X as a,Y as e}from"./framework-e28ace55.js";const t={},i=e(`<h1 id="linux" tabindex="-1"><a class="header-anchor" href="#linux" aria-hidden="true">#</a> Linux</h1><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230402212655427.png" alt="image-20230402212655427"></p><h2 id="linux-commands-cheat-sheet" tabindex="-1"><a class="header-anchor" href="#linux-commands-cheat-sheet" aria-hidden="true">#</a> Linux Commands Cheat Sheet</h2><p>https://www.linuxcool.com/</p><p>https://phoenixnap.com/kb/linux-commands#ftoc-heading-1</p><p>![image-20230402163930439](https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/Screenshot 2023-04-02 at 17-48-19 LinuxCommands (1) - linux-commands-cheat-sheet-pdf.pdf.png)</p><h3 id="directory-navigation" tabindex="-1"><a class="header-anchor" href="#directory-navigation" aria-hidden="true">#</a> Directory Navigation</h3><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230402200400184.png" alt="image-20230402200400184"></p><blockquote><p><code>cd [destination] </code></p><p>切换到指定的路径</p><p><code>cd .. </code></p><p>回退到上一层路径</p><p><code>pwd</code></p><p>Print Working Directory 打印出当前工作（当前所在）路径</p><p><code>ls [opt]</code></p><p>It will show the full list or content of your directory.</p><p><code>ll</code> It stands for long format.</p></blockquote><p><strong>cd [destination]</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd ~ 进入到root目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/root
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd / 进入到/目录</span>
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># cd /root 进入到指定路径的目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>cd ..</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/root
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd ..回退到上一层目录</span>
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>pwd</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost disk<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/dev/disk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ls</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># ls 列出当前目录下所有的目录</span>
bin  boot  <span class="token function">cat</span>  <span class="token parameter variable">-d</span>  dev  <span class="token parameter variable">-e</span>  etc  home  lib  lib64  madata  media  mnt  mydata  opt  proc  root  run  sbin  srv  sys  tmp  usr  <span class="token parameter variable">-v</span>  var
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># ll 列出当前目录下所有的目录并展示详细信息It stands for long format</span>
total <span class="token number">36</span>
lrwxrwxrwx.   <span class="token number">1</span> root root    <span class="token number">7</span> Jun <span class="token number">14</span>  <span class="token number">2022</span> bin -<span class="token operator">&gt;</span> usr/bin
dr-xr-xr-x.   <span class="token number">5</span> root root <span class="token number">4096</span> Sep  <span class="token number">8</span>  <span class="token number">2022</span> boot
<span class="token punctuation">[</span>root@localhost /<span class="token punctuation">]</span><span class="token comment"># ls -al</span>
total <span class="token number">48</span>
dr-xr-xr-x.  <span class="token number">19</span> root root <span class="token number">4096</span> Dec <span class="token number">16</span> 00:03 <span class="token builtin class-name">.</span>
dr-xr-xr-x.  <span class="token number">19</span> root root <span class="token number">4096</span> Dec <span class="token number">16</span> 00:03 <span class="token punctuation">..</span>
-rw-rw-rw-.   <span class="token number">1</span> root root    <span class="token number">0</span> Sep <span class="token number">11</span>  <span class="token number">2022</span> .authorelabel
-rw-r--r--    <span class="token number">1</span> root root    <span class="token number">0</span> Dec  <span class="token number">6</span> 03:42 .autorelabel
-rw-------.   <span class="token number">1</span> root root  <span class="token number">286</span> Sep <span class="token number">11</span>  <span class="token number">2022</span> .bash_history
lrwxrwxrwx.   <span class="token number">1</span> root root    <span class="token number">7</span> Jun <span class="token number">14</span>  <span class="token number">2022</span> bin -<span class="token operator">&gt;</span> usr/bin
dr-xr-xr-x.   <span class="token number">5</span> root root <span class="token number">4096</span> Sep  <span class="token number">8</span>  <span class="token number">2022</span> boot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-commands" tabindex="-1"><a class="header-anchor" href="#file-commands" aria-hidden="true">#</a> File Commands</h3><p><strong>Types of Files:</strong></p><ol><li><strong>Regular files (-):</strong> It contain programs, executable files and text files.</li><li><strong>Directory files (d):</strong> It is shown in blue color. It contain list of files.</li><li>Special files <ul><li><strong>Block file (b)</strong></li><li><strong>Character device file (c)</strong></li><li><strong>Named pipe file (p)</strong></li><li><strong>Symbolic link file (l)</strong></li><li><strong>Socket file (s)</strong></li></ul></li></ol><blockquote><p><code> mkdir dirname </code></p><p>create a directory</p><p><code>rmdir dirname</code></p><p>delete a directory and a <strong>directory has to be empty</strong> to be deleted.</p><p><code>touch filename.suffix</code></p><p>create a new file</p><p><code>rm [option] filename </code></p><p>remove a file</p><p><code>cp derive destination</code></p><p>copy a file or directory to destination</p><p><code>mv derive destination</code></p><p>move file or directory to destination / rename</p><p><code>ln [-s] original linkname</code></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230402210050169.png" alt="image-20230402210050169"></p><p><strong>Hard link</strong>：硬连接指通过索引节点来进行连接。在 Linux 的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在 Linux 中，多个文件名指向同一索引节点是存在的。比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，<strong>即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件</strong>，<strong>A 和 B 对文件系统来说是完全平等的</strong>。<strong>删除其中任何一个都不会影响另外一个的访问</strong>。</p><p><strong>Soft link</strong>：软链接文件有<strong>类似于 Windows 的快捷方式</strong>。它<strong>实际上是一个特殊的文件</strong>。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。比如：A 是 B 的软链接（A 和 B 都是文件名），A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号不相同，<strong>A 和 B 指向的是两个不同的 inode</strong>，继而指向两块不同的数据块。但是 <strong>A 的数据块中存放的只是 B 的路径名（可以根据这个找到 B 的目录项）</strong>。A 和 B 之间是“主从”关系，<strong>如果 B 被删除了，A 仍然存在</strong>（因为两个是不同的文件），<strong>但指向的是一个无效的链接</strong>。</p></blockquote><p><strong>mkdir dirname</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir commandTest 创建一个name为commandTest文件</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  Desktop    HelloEddie.java  Music       MyDocker_Nacos_Cluster                      Pictures  Templates
clash_for_linux  Documents  java_project     myactivemq  mysql80-community-release-el7-3.noarch.rpm  postfile  Videos
commandTest      Downloads  maven            MyDocker    original-ks.cfg                             Public
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd commandTest/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>rmdir dirname</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># rmdir commandTest/</span>
rmdir: failed to remove ‘commandTest/’: Directory not empty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>touch filename.suffix</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># touch eddieZhang.txt</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddieZhang.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>rm [option] filename</strong></p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>rm *extension</code></td><td>Used to delete files having same extension.</td></tr><tr><td><code>rm -r or R</code></td><td>To delete a directory recursively.</td></tr><tr><td><code>rm -i</code></td><td>Remove a file interactively.</td></tr><tr><td><code>rm -rf</code></td><td>Remove a directory forcefully.</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># rm eddie1.txt 删除一个指定的文件</span>
rm: remove regular empty <span class="token function">file</span> ‘eddie1.txt’? y
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie2.txt  eddie3.txt  eddieZhang.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># rm -f eddie2.txt 强制删除一个指定的文件 不会提问</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie3.txt  eddieZhang.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># rm *txt 删除以txt为后缀的所有文件</span>
rm: remove regular empty <span class="token function">file</span> ‘eddie3.txt’? y
rm: remove regular empty <span class="token function">file</span> ‘eddieZhang.txt’? y
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># rm -r eddieTest/ 递归删除指定文件夹下的所有子文件</span>
rm: descend into directory ‘eddieTest/’? y
rm: descend into directory ‘eddieTest/eddie2’? y
rm: remove regular empty <span class="token function">file</span> ‘eddieTest/eddie2/eddie.txt’? y
rm: remove directory ‘eddieTest/eddie2’? y
rm: remove directory ‘eddieTest/’? y
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>cp derive destination</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># cp eddie.txt ./eddie/eddieCopy.txt</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># cp eddie.txt ./eddie2.txt</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie  eddie2.txt  eddie.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>mv derive destination</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie  eddie2.txt  eddie.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># move eddie.txt ./eddie/ 将指定的文件移动到指定的路径</span>
bash: move: <span class="token builtin class-name">command</span> not found<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># mv eddie.txt ./eddie/</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie  eddie2.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># cd eddie</span>
<span class="token punctuation">[</span>root@localhost eddie<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddieCopy.txt  eddie.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie  eddie2.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># mv eddie2.txt eddie.txt 修改指定的文件的name</span>
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># ls</span>
eddie  eddie.txt
<span class="token punctuation">[</span>root@localhost commandTest<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="file-compression" tabindex="-1"><a class="header-anchor" href="#file-compression" aria-hidden="true">#</a> File Compression</h3><h3 id="file-permission" tabindex="-1"><a class="header-anchor" href="#file-permission" aria-hidden="true">#</a> File Permission</h3><h3 id="system-management-and-info" tabindex="-1"><a class="header-anchor" href="#system-management-and-info" aria-hidden="true">#</a> System Management and Info</h3><h3 id="network-management" tabindex="-1"><a class="header-anchor" href="#network-management" aria-hidden="true">#</a> Network Management</h3><h3 id="process-management" tabindex="-1"><a class="header-anchor" href="#process-management" aria-hidden="true">#</a> Process Management</h3><h3 id="searching" tabindex="-1"><a class="header-anchor" href="#searching" aria-hidden="true">#</a> Searching</h3><h3 id="hardware-information" tabindex="-1"><a class="header-anchor" href="#hardware-information" aria-hidden="true">#</a> Hardware Information</h3><h3 id="package-installation" tabindex="-1"><a class="header-anchor" href="#package-installation" aria-hidden="true">#</a> Package Installation</h3><h3 id="user-and-groups" tabindex="-1"><a class="header-anchor" href="#user-and-groups" aria-hidden="true">#</a> User and Groups</h3><h3 id="ssh-login" tabindex="-1"><a class="header-anchor" href="#ssh-login" aria-hidden="true">#</a> SSH Login</h3><h3 id="file-transfer" tabindex="-1"><a class="header-anchor" href="#file-transfer" aria-hidden="true">#</a> File Transfer</h3><h3 id="disk-usage" tabindex="-1"><a class="header-anchor" href="#disk-usage" aria-hidden="true">#</a> Disk Usage</h3><h3 id="variables" tabindex="-1"><a class="header-anchor" href="#variables" aria-hidden="true">#</a> Variables</h3><h3 id="shell-command-management" tabindex="-1"><a class="header-anchor" href="#shell-command-management" aria-hidden="true">#</a> Shell Command Management</h3><h2 id="vim-editor-commands" tabindex="-1"><a class="header-anchor" href="#vim-editor-commands" aria-hidden="true">#</a> VIM Editor Commands</h2><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230402163930439.png" alt="image-20230402163930439"></p><h3 id="open-create-a-file" tabindex="-1"><a class="header-anchor" href="#open-create-a-file" aria-hidden="true">#</a> <strong>Open/create a file</strong></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> test.txt
<span class="token function">vi</span> test.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main-operation-modes" tabindex="-1"><a class="header-anchor" href="#main-operation-modes" aria-hidden="true">#</a> Main operation modes</h3><p>​ <strong>“Standard mode”</strong> — movement in a file, text deletion and other editing features. This is the main mode, which is used for immediate switching to other modes. In order to return to the main mode from any other mode:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>, sometimes two <span class="token builtin class-name">times</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span>Ctrl-<span class="token punctuation">[</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​ <strong>“Input mode”</strong> - text input. After the text is entered, the standard mode is immediately returned. Please, note that the text is deleted and entered in two different modes. Switch to it from the standard mode:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>i
<span class="token operator">&lt;</span>Insert<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​ <strong>“Command mode”</strong> - Commands (operations with a file, search and replacement, editor configuring…). Switch to it from the standard mode:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​ <strong>“Search mode”</strong> - input of a search request. Switch to this mode from the standard mode</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/ ,  Search forward <span class="token keyword">for</span> <span class="token punctuation">(</span>N-th<span class="token punctuation">)</span> matching line
? ,  Search backward <span class="token keyword">for</span> <span class="token punctuation">(</span>N-th<span class="token punctuation">)</span> matching line
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​ <strong>“Visual mode”</strong> - text highlighting mode:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;v&quot;</span> and right or left arrows<span class="token punctuation">;</span>
Shift+v mark line<span class="token punctuation">;</span>
Ctrl+v rectangle, mark part of the text
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="movement-in-a-file" tabindex="-1"><a class="header-anchor" href="#movement-in-a-file" aria-hidden="true">#</a> Movement in a file</h3><p>​ After loading of Vim, a part of the downloaded text file will be displayed on the screen. After loading, Vim is in the “command mode”, which is one of main modes. It means that if you press on [&lt;]l[&gt;] button (lowercase L), you will see that a cursor is shifted on one character to the right instead of displaying “l” in the cursor place. In the command mode, characters, entered using the keyboard, are used as commands for Vim, but not as characters, placed in the text. Movement commands are one of the most important command types. There are several of them:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>For the cursor movement press keys h,j,k,l as shows below:
               ^
               k
           <span class="token operator">&lt;</span>h     l<span class="token operator">&gt;</span>
               j
               <span class="token function">v</span>

<span class="token operator">&lt;</span>Ctrl-f<span class="token operator">&gt;</span> - Forward  one window
<span class="token operator">&lt;</span>Ctrl-b<span class="token operator">&gt;</span> - Backward one window
<span class="token operator">&lt;</span>Ctrl-d<span class="token operator">&gt;</span> - Forward  one half-window
<span class="token operator">&lt;</span>Ctrl-u<span class="token operator">&gt;</span> - Backward one half-window
<span class="token operator">&lt;</span>Ctrl-y<span class="token operator">&gt;</span> - Backward one line
<span class="token operator">&lt;</span>Ctrl-e<span class="token operator">&gt;</span> - Forward  one line
<span class="token number">0</span> <span class="token punctuation">(</span>zero<span class="token punctuation">)</span> - Move cursor to start of line
$        - Move cursor to end of line
w        - Move cursor right one word
b        - Move cursor left one word
W        - Move cursor right to the space after word
B        - Move cursor left to the space before word
gg       - go to the start of a <span class="token function">file</span>
G        - positions at the end of the <span class="token function">file</span>
<span class="token operator">&lt;</span>n<span class="token operator">&gt;</span>G     - Cursor goes to the specified <span class="token punctuation">(</span>n<span class="token punctuation">)</span> line
/<span class="token operator">&lt;</span>text<span class="token operator">&gt;</span><span class="token operator">&lt;</span>CR<span class="token operator">&gt;</span> - search <span class="token keyword">for</span> a <span class="token string">&quot;text&quot;</span>
?<span class="token operator">&lt;</span>text<span class="token operator">&gt;</span><span class="token operator">&lt;</span>CR<span class="token operator">&gt;</span> - search backwards <span class="token keyword">for</span> a <span class="token string">&quot;text&quot;</span>
n        - <span class="token function">find</span> the next occurrence of the same string
N        - repeats the last search the opposite direction
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="text-input" tabindex="-1"><a class="header-anchor" href="#text-input" aria-hidden="true">#</a> Text input</h3><p>​ The followinf commands switch the editor into the input mode:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>i — Insert text before the current cursor position
a — Append text following current cursor position
I — Insert text at the beginning of the cursor line
А — Append text to the end of current line
o — Open up a new line following the current line and <span class="token function">add</span> text there
O — Open up a new line <span class="token keyword">in</span> front of the current line and <span class="token function">add</span> text there
s <span class="token operator">&lt;</span>n<span class="token operator">&gt;</span> - Change one character
S - Change a whole line
R — Begin overstrike or replace mode. Use ESC key to <span class="token builtin class-name">exit</span>
r — Replace one character at the cursor position
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deletion-and-insertion" tabindex="-1"><a class="header-anchor" href="#deletion-and-insertion" aria-hidden="true">#</a> Deletion and insertion</h3><p>​ The main text deletion and insertion commands are listed below:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>x — Delete character under the cursor
X — Delete character left of the cursor
d — <span class="token builtin class-name">command</span> may be followed by any motion command, and it deletes from the current location to the place where the cursor winds up. For example:
d4w - deletes four words
diw - delete word arrownd cursor
<span class="token function">dd</span> — delete a whole line
d<span class="token operator">&lt;</span>n<span class="token operator">&gt;</span>d или <span class="token operator">&lt;</span>n<span class="token operator">&gt;</span>dd — deletes n line
db - delete word backward
d0 - deletes character from the begining to cursor position
d$ or D - Delete to end of the line
с — The change operator
сс - changes a whole line
C - Change to end of the line
yy <span class="token punctuation">(</span>or Y<span class="token punctuation">)</span> — yanks current line <span class="token punctuation">(</span>VI&#39;s copy commmand<span class="token punctuation">)</span>
y<span class="token operator">&lt;</span>n<span class="token operator">&gt;</span>y — copy <span class="token string">&quot;n&quot;</span> lines from current to the clipboard
p — <span class="token function">paste</span> below cursor
P — <span class="token function">paste</span> above cursor
J — Join next line down to the end of the current line
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="change-cancellation" tabindex="-1"><a class="header-anchor" href="#change-cancellation" aria-hidden="true">#</a> Change cancellation</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>u — Undo last change
U — Restore line
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="show-line-numbers-in-vim" tabindex="-1"><a class="header-anchor" href="#show-line-numbers-in-vim" aria-hidden="true">#</a> Show Line Numbers in Vim</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># set all line show number</span>
:set nu
<span class="token comment"># To disable</span>
:set nu<span class="token operator">!</span>

<span class="token comment">#show current line number</span>
:nu
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="search" tabindex="-1"><a class="header-anchor" href="#search" aria-hidden="true">#</a> Search</h3><p>​ Go to a line:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/abcdef - Find the first string <span class="token string">&quot;abcdef&quot;</span>
n - Find the next <span class="token string">&quot;abcdef&quot;</span>
N - Find the previous <span class="token string">&quot;abcdef&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exit" tabindex="-1"><a class="header-anchor" href="#exit" aria-hidden="true">#</a> Exit</h3><p>​ There is a pair of commands, which you should know:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:q<span class="token operator">!</span> - Quit <span class="token punctuation">(</span>no warning<span class="token punctuation">)</span>
:wq - Write <span class="token function">file</span> to disk and quit the editor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>​ Main features, required for operation, are described in this article. Almost all Linux distributions are described in the manual on operation with the editor. Just enter command vimtutor in the command line.</p><h3 id="help" tabindex="-1"><a class="header-anchor" href="#help" aria-hidden="true">#</a> Help</h3><p>​ In order to call the help, containing the information about the editor, enter the following command in the terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">man</span> <span class="token function">vim</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="linux-centos-7" tabindex="-1"><a class="header-anchor" href="#linux-centos-7" aria-hidden="true">#</a> Linux(Centos 7)</h2><h3 id="linux项目部署" tabindex="-1"><a class="header-anchor" href="#linux项目部署" aria-hidden="true">#</a> Linux项目部署</h3><h4 id="手动部署项目" tabindex="-1"><a class="header-anchor" href="#手动部署项目" aria-hidden="true">#</a> 手动部署项目</h4><p><strong>1）将编写好的springboot 项目的Java代码打包成.jar</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106112309893.png" alt="image-20230106112309893"></p><p><strong>2）将.jar文件传输至Linux服务器指定位置</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106112407676.png" alt="image-20230106112407676"></p><p><strong>3）开放Linux防火墙(项目使用到的端口)</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106112649833.png" alt="image-20230106112649833"></p><p><strong>3）后台运行项目 并 指定日志输出文件</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106113132554.png" alt="image-20230106113132554"></p><p><strong>4）访问项目</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106113319155.png" alt="image-20230106113319155"></p><p><strong>5）停止项目</strong></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106114622797.png" alt="image-20230106114622797"></p><h4 id="shell-脚本自动部署项目" tabindex="-1"><a class="header-anchor" href="#shell-脚本自动部署项目" aria-hidden="true">#</a> Shell 脚本自动部署项目</h4><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107140648013.png" alt="image-20230107140648013"></p><p>1）安装git</p><p>使用yum install git</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@192 java_project]# yum list git
[root@192 java_project]# yum install git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107152059930.png" alt="image-20230107152059930"></p><p>使用git clone 代码</p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107152738214.png" alt="image-20230107152738214"></p><p>2）安装maven</p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107173353330.png" alt="image-20230107173353330"></p><p>配置环境变量</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@192 etc]# vim profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107173200699.png" alt="image-20230107173200699"></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[root@192 etc]# source /etc/profile
[root@192 etc]# mvn -version
-bash: /root/maven/apache-maven-3.6.3/bin/mvn: Permission denied
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置setting.xml</p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107173731217.png" alt="image-20230107173731217"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107173938931.png" alt="image-20230107173938931"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107174024106.png" alt="image-20230107174024106"></p><p>3）编写Shell脚本(拉取代码 编译 打包 启动)</p><p>bootstart.sh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
<span class="token builtin class-name">echo</span>  Automatic deployment project
<span class="token builtin class-name">echo</span> <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>

<span class="token builtin class-name">echo</span> 停止原来运行中的工程
<span class="token assign-left variable">APP_NAME</span><span class="token operator">=</span>Project_Practice_Reggie

<span class="token assign-left variable">tpid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> Project_Practice_ReggieTakeout-1.0-SNAPSHOT.jar<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">kill</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${tpid}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Stop Process...&#39;</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$tpid</span>
<span class="token keyword">fi</span>
<span class="token function">sleep</span> <span class="token number">2</span>
<span class="token assign-left variable">tpid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> Project_Practice_ReggieTakeout-1.0-SNAPSHOT.jar<span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span><span class="token operator">|</span><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">kill</span><span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${tpid}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Kill Process!&#39;</span>
    <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$tpid</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;Stop Success!&#39;</span>
<span class="token keyword">fi</span>

<span class="token builtin class-name">echo</span> 准备从Git仓库拉取最新代码
<span class="token builtin class-name">cd</span> /root/java_project/reggie_takeout/automatic_deployment_project/Project_Practice_Reggie

<span class="token builtin class-name">echo</span> 开始从Git仓库拉取最新代码 完全覆盖本地代码
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span>
<span class="token function">git</span> pull origin master
<span class="token builtin class-name">echo</span> 代码拉取完成

<span class="token builtin class-name">echo</span> 开始打包
<span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>mvn clean package <span class="token parameter variable">-Dmaven.test.skip</span><span class="token operator">=</span>true<span class="token variable">\`</span></span>

<span class="token builtin class-name">cd</span> target

<span class="token builtin class-name">echo</span> 启动项目
<span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-jar</span> Project_Practice_ReggieTakeout-1.0-SNAPSHOT.jar <span class="token operator">&amp;&gt;</span> Project_Practice_Reggie.log <span class="token operator">&amp;</span>

<span class="token builtin class-name">echo</span> 项目启动完成
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4）xxx.sh 赋予权限</p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107175215451.png" alt="image-20230107175215451"></p><p>5）执行shell脚本</p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107175733129.png" alt="image-20230107175733129"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230107180849229.png" alt="image-20230107180849229"></p><h3 id="linux开放防火墙端口" tabindex="-1"><a class="header-anchor" href="#linux开放防火墙端口" aria-hidden="true">#</a> Linux开放防火墙端口</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>install防火墙
yum install firewalld firewall-config

operate防火墙
service firewalld restart 重启
service firewalld start 开启
service firewalld stop 关闭

开放指定端口
firewall-cmd --zone=public --add-port=1935/tcp --permanent
命令含义：
–zone #作用域
–add-port=1935/tcp#添加端口，格式为：端口/通讯协议
–permanent#永久生效，没有此参数重启后失效

重启防火墙
firewall-cmd --reload

查看所有开放的端口
firewall-cmd --zone=public --list-ports
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置静态ip" tabindex="-1"><a class="header-anchor" href="#设置静态ip" aria-hidden="true">#</a> 设置静态IP</h3><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106122514848.png" alt="image-20230106122514848"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106123527934.png" alt="image-20230106123527934"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106123502472.png" alt="image-20230106123502472"></p><p><img src="https://eddie-typora-image.oss-cn-shenzhen.aliyuncs.com/typora-user-images/image-20230106125240201.png" alt="image-20230106125240201"></p><h2 id="linux-ubuntu" tabindex="-1"><a class="header-anchor" href="#linux-ubuntu" aria-hidden="true">#</a> Linux(Ubuntu)</h2><p>1、Ubuntu查看防火墙的状态 在Ubuntu系统进行安装的时候默认安装了ufw防火墙</p><p>查看防火墙的状态</p><p>命令：</p><pre><code>   sudo ufw status
</code></pre><p>系统提示： “Status: inactive”状态：不活跃</p><p>上面提示表示没有开启防火墙，并不是没有安装防火墙</p><p>如果没有安装可以使用命令安装</p><p>命令：</p><pre><code>   sudo sudo apt-get install ufw
</code></pre><p>2、Ubuntu开启防火墙</p><p>开启防火墙，</p><p>命令：</p><pre><code>   sudo ufw enable          //开启防火墙
</code></pre><p>注意：Command may disrupt existing ssh connections. Proceed with operation (y|n)?</p><p>表示：命令可能会中断现有的ssh连接。继续操作(y|n)?</p><p>因为是在远程的Xshell进行连接开启防火墙的，有的系统是没有将SSH的22端口设置为public的，所以会有这样的提示，这里分为两种情况，如果开启防火墙时在防火墙之中检测到22端口已添加为防火墙的开放端口，那么输入y继续操作以后，当前Xshell会自动断开连接；相反，如果开启防火墙时在防火墙之中没有检测到22端口，那么输入y继续操作以后22端口将会不再支持其他连接，只支持当前已有的这个连接，保持当前连接的原因是可以通过该连接开放22端口。</p><p>这里之前没有设置过，直接输入y继续执行</p><p>系统提示：“防火墙是活动的，并在系统启动时启用”</p><p>表示防火墙已经开启</p><p>查看防火墙的状态</p><p>命令：</p><pre><code>   sudo ufw status           //查看防火墙的状态
</code></pre><p>可以看到系统只对外开放了80端口</p><p>在这里通常会有些错觉，22端口没有开放，但是依然是连接状态，这是系统做的人性化优化，便于远程管理服务器，虽然22端口没有开放，但是用户通过当前的连接开启防火墙后，该连接依然处于连接状态，只要不关闭当前连接还是可以在当前连接中正产操作的。如果是重新开启一个连接是连不上的</p><p>在windows上进行telnet也是不通的</p><p>所以在远程管理服务器时，如果开启了防火墙先查看SSH的22端口有没有开放，如果没有开放，第一时间开放22端口（如果为了安全也可以指定ip开放22端口）</p><p>3、Ubuntu添加开放SSH端口</p><p>命令：</p><pre><code>   sudo ufw allow 22        //开放22端口
</code></pre><p>开启完成，需要重启防火墙生效</p><p>命令：</p><pre><code>   sudo ufw reload           //重启ufw防火墙
</code></pre><p>重启成功</p><p>再查看防火墙的状态</p><p>命令：</p><pre><code>   sudo ufw status           //查看防火墙的状态
</code></pre><p>22端口已经开放</p><p>查看22端口的监听状态</p><p>命令：</p><pre><code>   sudo netstat -tunlp | grep 22            //查看22端口信息
</code></pre><p>22端口属于监听状态，在Windows下能够telnet通</p><p>命令：</p><pre><code>   telnet 192.168.121.135 22
</code></pre>`,178),o=[i];function l(r,p){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","Linux.html.vue"]]);export{d as default};
